///////////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// Simple C Lambda program demonstrate working with multi-thread in a script program.
/// Other techniques:
///     + Using lambda function.
///     + Calling a function from another function which 
///       declared before it according to compiling order.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////

// declare function object of long(long arg0)
function<long(long)> fy;

long X(long n) {
    if(n < 1) {
        return 1;
    }
    return X(n -1) + fy(n - 1);
}

long Y(long n) {
    if(n < 1) {
        return 1;
    }
    return 2 * X(n -1) * Y(n - 1);
}

// set the function object to function 'Y'
fy = Y;

// a function of script, in this tutorial it act as main function of the script program
void main() {
    long n = 7;
    long xn_1;
    long yn_1;
    
    // a lambda function which return void, capture variable value of n, reference of xn_1 and has no parameter.
    f1 = [n, &xn_1]() {
        xn_1 = X(n - 1);
    };
    
    // a lambda function which return void, capture variable value of n, reference of yn_1 and has no parameter.
    f2 = [](long n) -> long {
        return Y(n);
    };
    
    // create threads with default parameter(Stack size = 1MB)
    // then execute parallel function X and Y to compute values for n - 1
    
    // execute function X in thread t1
    t1 = createThread(f1);
    // execute function Y in main thread
    yn_1 = f2(n - 1);
    
    // join thread
    joinThread(t1);
    
    // close threads
    closeThread(t1);
    
    // after two threads are done, now it's time to compute values for n
    long xn = xn_1 + yn_1;
    long yn = 2 * xn_1 * yn_1;
    
    // print the results
    println("X(" + n + ") = " + xn);
    println("Y(" + n + ") = " + yn);
}